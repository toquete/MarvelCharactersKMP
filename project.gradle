apply plugin: 'jacoco'

jacoco {
    toolVersion = "0.8.7"
}

final mainSrc = subprojects.collect { project ->
    "${project.projectDir}/src/main/java"
}

task jacocoFullTestReport(type: JacocoReport) {
    group = 'coverage'
    description = "Generate Jacoco coverage reports after running tests."

    def projects = subprojects.findAll {
        it.getTasksByName("jacocoTestReport", false)
    }

    dependsOn(projects.jacocoTestReport)

    final source = files(projects.jacocoTestReport.sourceDirectories)

    additionalSourceDirs.from = source
    sourceDirectories.from = source
    classDirectories.from = files(projects.jacocoTestReport.classDirectories)
    executionData.from = files(projects.jacocoTestReport.executionData)

    reports {
        xml.required.set(true)
        html.required.set(true)
        html.outputLocation.set(file("${buildDir}/reports/jacoco"))
    }

    doLast {
        println "jacoco unit report has been generated to file://${reports.html.outputLocation.asFile}/index.html"
    }
}

task jacocoFullAndroidTestReport(type: JacocoReport) {
    group = 'coverage'
    description = "Generate Jacoco Android coverage reports after running tests."

    def projects = subprojects.findAll {
        if (it.name != "model") {
            it.getTasksByName("jacocoAndroidTestReport", false)
        }
    }

    dependsOn(projects.jacocoAndroidTestReport)

    final source = files(projects.jacocoAndroidTestReport.sourceDirectories)

    additionalSourceDirs.from = source
    sourceDirectories.from = source
    classDirectories.from = files(projects.jacocoAndroidTestReport.classDirectories)
    executionData.from = files(projects.jacocoAndroidTestReport.executionData)

    reports {
        xml.required.set(true)
        html.required.set(true)
        html.outputLocation.set(file("${buildDir}/reports/jacoco/androidTest"))
    }

    doLast {
        println "jacoco android report has been generated to file://${reports.html.outputLocation.asFile}/index.html"
    }
}

coveralls {
    sourceDirs = files([mainSrc]).flatten()
    jacocoReportPath 'build/reports/jacoco/jacocoFullTestReport/jacocoFullTestReport.xml'
}